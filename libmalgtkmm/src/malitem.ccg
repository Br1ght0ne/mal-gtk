/*
 *  This file is part of mal-gtk.
 *
 *  mal-gtk is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  mal-gtk is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with mal-gtk.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "malgtk_malitem.h"
#include "malgtk_enumtypes.h"

namespace
{
  using cb_t = std::function<void (const Glib::ustring&)>;
  extern "C" {
    static gboolean
    foreach_wrapper(const gchar *str, gpointer user_data)
    {
      const cb_t* cb = static_cast<const cb_t*>(user_data);
      cb->operator()(Glib::convert_const_gchar_ptr_to_ustring(str));

      return FALSE;
    }
  }
}

namespace MALnew
{
  void
  Malitem::foreach_synonym(const std::function<void (const Glib::ustring&)>& cb) const
  {
    malgtk_malitem_foreach_synonym(gobj(), &foreach_wrapper, &const_cast<std::function<void (const Glib::ustring&)>&>(cb));  
  }
  
  void
  Malitem::foreach_tag(const std::function<void (const Glib::ustring&)>& cb) const
  {
    malgtk_malitem_foreach_tag(gobj(), &foreach_wrapper, &const_cast<std::function<void (const Glib::ustring&)>&>(cb));  
  }
} // namespace MALnew
